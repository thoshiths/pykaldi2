from "fstext/getters-clifwrap.h" import *
from "fstext/lattice-weight-clifwrap.h" import *
from "fstext/fst-clifwrap.h" import *
from "fstext/mutable-fst-clifwrap.h" import *
from "fstext/vector-fst-clifwrap.h" import *
from "fstext/context-fst-clifwrap.h" import *
from "fstext/deterministic-fst-clifwrap.h" import *
from "fstext/determinize-lattice-clifwrap.h" import *

from "fstext/special-ops.h":
  namespace `fst`:

## Kaldi FST Ops

    def `ComposeContextExt` as _compose_context(
        disambig_syms: list<int>, N: int, P: int,
        ifst: StdVectorFst, ofst: StdVectorFst) -> list<list<int>>

    def `AddSubsequentialLoopExt` as add_subsequential_loop(
        subseq_symbol: int, fst: StdMutableFst)
    def `ComposeDeterministicOnDemandExt` as _compose_deterministic_on_demand(
      fst1: StdFst, fst2: StdDeterministicOnDemandFst, ofst: StdMutableFst)

    def `ComposeDeterministicOnDemandInverseExt` as _compose_deterministic_on_demand_inverse(
      fst1: StdFst, fst2: StdDeterministicOnDemandFst, ofst: StdMutableFst)

    def `DeterminizeLatticeExt` as _determinize_lattice(
      ifst: LatticeFst, ofst: LatticeMutableFst,
      opts: DeterminizeLatticeOptions = default) -> bool

    def `DeterminizeLatticeExt` as _determinize_lattice_to_compact(
      ifst: LatticeFst, ofst: CompactLatticeMutableFst,
      opts: DeterminizeLatticeOptions = default) -> bool

    def `DeterminizeStarExt` as _determinize_star(
      ifst: StdFst, ofst: StdMutableFst, delta: float = default,
      max_states: int = default, allow_partial: bool = default) -> bool

    def `RemoveEpsLocalExt` as _remove_eps_local(fst: StdMutableFst)

    def `RemoveEpsLocalSpecialExt` as _remove_eps_local_special(fst: StdMutableFst)

    def `PushInLogExt` as _push_in_log(fst: StdVectorFst, ptype: int,
                                       delta: float = default, to_final: bool = default)

    def `DeterminizeStarInLogExt` as determinize_star_in_log(
      fst: StdVectorFst, delta: float = default, max_states: int = default)
