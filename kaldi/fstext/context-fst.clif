from "base/iostream-clifwrap.h" import *
from "fstext/symbol-table-clifwrap.h" import *
from "fstext/float-weight-clifwrap.h" import *
from "fstext/lattice-weight-clifwrap.h" import *
from "fstext/arc-clifwrap.h" import *

from kaldi.fstext._deterministic_fst import StdDeterministicOnDemandFst
from kaldi.util import _value_error_on_false

from "fstext/context-fst.h":
  namespace `fst`:
    def `WriteILabelInfo` as write_ilabel_info(os: ostream, binary: bool,
                                               info: list<list<int>>)

    def `ReadILabelInfo` as read_ilabel_info(is: istream, binary: bool)
        -> list<list<int>>

    def `CreateILabelInfoSymbolTable` as create_ilabel_info_symbol_table(
        info: list<list<int>>, phones_symtab: SymbolTable,
        separator: str, disambig_prefix: str) -> SymbolTable

    # ComposeContext and AddSubsequentialLoop are wrapped in special-ops.clif.

    class `InverseContextFst` as StdInverseContextFst(StdDeterministicOnDemandFst):
     
      def __init__(self, subsequential_symbol: int, phones: list<int>,
                   disambig_syms: list<int>, context_width: int, central_position: int)

      def `Start` as start(self) -> int

      def `Final` as final(self, state: int) -> TropicalWeight

      def `GetArc` as get_arc(self, s: int, ilabel: int)
        -> (success: bool, oarc: StdArc):
        
        return _value_error_on_false(...)

      def `IlabelInfo` as ilabel_info(self) -> list<list<int>>
