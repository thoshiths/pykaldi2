from "fstext/float-weight-clifwrap.h" import *
from "fstext/lattice-weight-clifwrap.h" import *
from "fstext/arc-clifwrap.h" import *
from "fstext/vector-fst-clifwrap.h" import *

from kaldi.fstext._deterministic_fst import StdDeterministicOnDemandFst
from kaldi.util import _value_error_on_false

from "fstext/grammar-context-fst.h":
  namespace `fst`:
    enum NonterminalValues

    def `GetEncodingMultiple` as get_encoding_multiple(nonterm_phones_offset: int) -> int

    def `ComposeContextLeftBiphone` as compose_context_left_biphone(
        nonterm_phones_offset: int, disambig_syms: list<int>,
        ifst: StdVectorFst, ofst: StdVectorFst) -> list<list<int>>

    class `InverseLeftBiphoneContextFst` as StdInverseLeftBiphoneContextFst(StdDeterministicOnDemandFst):
      def __init__(self, nonterm_phones_offset: int, phones: list<int>,
                   disambig_syms: list<int>)

      def `Start` as start(self) -> int

      def `Final` as final(self, state: int) -> TropicalWeight

      def `GetArc` as get_arc(self, s: int, ilabel: int)
        -> (success: bool, oarc: StdArc):
        return _value_error_on_false(...)

      def `IlabelInfo` as ilabel_info(self) -> list<list<int>>
