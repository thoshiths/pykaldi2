from "fstext/getters-clifwrap.h" import *
from "fstext/lattice-weight-clifwrap.h" import *
from "fstext/fst-clifwrap.h" import *
from "fstext/mutable-fst-clifwrap.h" import *


from "fstext/table-matcher.h":
  namespace `fst`:
    class TableMatcherOptions:

      table_ratio: float

      min_table_size: int


    class TableComposeOptions(TableMatcherOptions):
      
      connect: bool
      
      filter_type: ComposeFilter
      
      table_match_type: MatchType
      

      @add__init__
      def `TableComposeOptions` as from_matcher_opts(
        self, mo: TableMatcherOptions, connect: bool = default,
        filter_type: ComposeFilter = default,
        table_match_type: MatchType = default)

    def `TableCompose` as table_compose(ifst1: StdFst, ifst2: StdFst,
                                        ofst: StdMutableFst,
                                        opts: TableComposeOptions = default)

    def `TableCompose` as table_compose_lattice(
      ifst1: LatticeFst, ifst2: LatticeFst, ofst: LatticeMutableFst,
      opts: TableComposeOptions = default)

    class `TableComposeCache<StdFst>` as StdTableComposeCache:
      
      opts: TableComposeOptions
      

      @add__init__
      def `TableComposeCache` as from_compose_opts(
        self, opts: TableComposeOptions = default)

    def `TableCompose` as table_compose_cache(
      ifst1: StdFst, ifst2: StdFst, ofst: StdMutableFst,
      cache: StdTableComposeCache)
