
from "rnnlm/sampler.h":
  namespace `kaldi::rnnlm`:
    def `SampleWithoutReplacement` as sample_without_replacement(probs: list<float>) -> list<int>

    class Sampler:
      
      def __init__(self, unigram_probs: list<float>)

      def `SampleWords` as sample_words(
        self, num_words_to_sample: int, unigram_weight: float,
        higher_order_probs: list<tuple<int, float>>) -> list<tuple<int, float>> 

      def `SampleWords` as sample_words_with_requirements(
        self, num_words_to_sample: int, unigram_weight: float,
        higher_order_probs: list<tuple<int, float>>,
        words_we_must_sample: list<int>) -> list<tuple<int, float>> 

    def `CheckDistribution` as check_distribution(d: list<tuple<int, float>>) 

    def `TotalOfDistribution` as total_of_distribution(d: list<tuple<int, float>>) -> float 

    def `MergeDistributions` as merge_distributions(
      d1: list<tuple<int, float>>, d2: list<tuple<int, float>>) -> list<tuple<int, float>> 
