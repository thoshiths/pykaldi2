from "itf/decodable-itf-clifwrap.h" import *
from "itf/options-itf-clifwrap.h" import *
from "fstext/lattice-weight-clifwrap.h" import *
from "fstext/fst-clifwrap.h" import *
from "fstext/mutable-fst-clifwrap.h" import *

from "decoder/faster-decoder.h":
  namespace `kaldi`:
    class FasterDecoderOptions:

      beam: float
      
      max_active: int

      min_active: int
      
      beam_delta: float
      
      hash_ratio: float
      
      def `Register` as register(self, opts: OptionsItf, full: bool)

    class FasterDecoder:
      
      def __init__(self, fst: StdFst, opts: FasterDecoderOptions)

      def `SetOptions` as set_options(self, opts: FasterDecoderOptions)

      def `Decode` as decode(self, decodable: DecodableInterface)

      def `ReachedFinal` as reached_final(self) -> bool

      def `GetBestPath` as _get_best_path(self,
          fst_out: LatticeMutableFst, use_final_probs: bool = default) -> bool

      def `InitDecoding` as init_decoding(self)

      def `AdvanceDecoding` as advance_decoding(self,
          decodable: DecodableInterface, max_num_frames: int = default)

      def `NumFramesDecoded` as num_frames_decoded(self) -> int
